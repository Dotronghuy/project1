<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{this.title}}</title>
    <link rel="stylesheet" href="/css/communityCode.css">
    <link rel="stylesheet" href="/css/sytleFooter.css">
    <link rel="stylesheet" href="/css/sytleHeader.css">
    <link rel="stylesheet" href="/css/styleModal.css">
    <link rel="stylesheet" href="/css/cart.css">
    <link rel="stylesheet" href="/css/showproducts.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
        integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>

<body>
    {{{body}}}
    <script src="/main/main.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            function parsePrice(priceText) {
                return parseFloat(priceText.replace(/[^0-9]/g, ''));
            }

            function updateTotalPrice(productId, quanlity) {
                const priceElement = document.querySelector(`.price[data-id="${productId}"]`);
                const totalPriceElement = document.querySelector(`.total-price[data-id="${productId}"]`);

                if (priceElement && totalPriceElement) {
                    const unitPrice = parsePrice(priceElement.textContent.trim());

                    if (!isNaN(unitPrice)) {
                        const totalPrice = unitPrice * quanlity;
                        totalPriceElement.textContent = `â‚«${totalPrice.toLocaleString()}`;
                    } else {
                        console.error('Invalid unit price:', priceElement.textContent);
                    }
                } else {
                    console.error('Price or Total Price element not found');
                }
            }

            function updateQuanlity(productId, newQuanlity) {
                const quanlityInput = document.querySelector(`.quanlity-number[data-id="${productId}"]`);
                if (quanlityInput) {
                    quanlityInput.value = newQuanlity;
                    updateTotalPrice(productId, newQuanlity);
                } else {
                    console.error('Quantity input not found');
                }
            }

            function initializeCart() {
                const priceElements = document.querySelectorAll('.price');
                priceElements.forEach(priceElement => {
                    const productId = priceElement.getAttribute('data-id');
                    const quanlityInput = document.querySelector(`.quanlity-number[data-id="${productId}"]`);
                    if (quanlityInput) {
                        const quanlity = parseInt(quanlityInput.value, 10);
                        updateTotalPrice(productId, quanlity);
                    }
                });
            }

            initializeCart();

            const minusButtons = document.querySelectorAll(".option-minus");
            const addButtons = document.querySelectorAll(".option-add");

            minusButtons.forEach(button => {
                button.addEventListener("click", function () {
                    const productId = button.getAttribute("data-id");
                    const quanlityInput = document.querySelector(`.quanlity-number[data-id="${productId}"]`);
                    let quanlity = parseInt(quanlityInput.value, 10);

                    if (quanlity > 1) {
                        quanlity--;
                        updateQuanlity(productId, quanlity);
                    }
                });
            });

            addButtons.forEach(button => {
                button.addEventListener("click", function () {
                    const productId = button.getAttribute("data-id");
                    const quanlityInput = document.querySelector(`.quanlity-number[data-id="${productId}"]`);
                    let quanlity = parseInt(quanlityInput.value, 10);

                    quanlity++;
                    updateQuanlity(productId, quanlity);
                });
            });

            const quanlityInputs = document.querySelectorAll(".quanlity-number");
            quanlityInputs.forEach(input => {
                input.addEventListener("input", function () {
                    const productId = input.getAttribute("data-id");
                    let quanlity = parseInt(input.value, 10);

                    if (quanlity < 1 || isNaN(quanlity)) {
                        quanlity = 1;
                        input.value = quanlity;
                    }

                    updateQuanlity(productId, quanlity);
                });
            });
        });



    </script>


</body>

</html>